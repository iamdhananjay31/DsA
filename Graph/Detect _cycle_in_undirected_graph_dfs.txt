 bool dfs(int node,int parent,vector<int>adj[],vector<int>&visited)
    {
        visited[node]=1;
        for(auto it=adj[node].begin(); it!=adj[node].end(); it++)
        {
            if(it != adj[node].end())
            {
                if(!visited[*it])
                {
                    if(dfs(*it,node,adj,visited))
                    return true;
                }
                else if(*it != parent)
                return true;
                
            }
        }
        return false;
    }
    //Function to detect cycle in an undirected graph.
	bool isCycle(int V, vector<int>adj[])
	{
	    vector<int>visited(V,0);
	      for(int i=0; i<V; i++)
	      {
	       
	      if(!visited[i] && dfs(i,-1,adj,visited))
	      return true;
	      }
	      return false;
	   
	}